#!/usr/bin/env node

/**
 * Module dependencies.
 */


var exec = require('child_process').exec
var program = require('commander');
var mkdirp = require('mkdirp');
var pkg = require('../package.json');
var version = pkg.version;
var os = require('os');
fs = require('fs');
npath = require('path');
grunt = require('grunt');
var runner = require('karma').runner;
var server = require('karma').server;
var eol = 'win32' == os.platform() ? '\r\n' : '\n';
base_path = npath.join(npath.dirname(fs.realpathSync(__filename)), '../');
require('../lib/trig');
require('../lib/gruntConfig');
require('../lib/tasks');

grunt.initConfig(gruntConfig);

program
  .command('new <path>')
  .description('create a new trig app at the given path')
  .action(function(path){
    console.log("creating a new app!");
    trig.createApp(path);
  });

program
  .command('server')
  .description('run the trig app server')
  .action(function() {
    trig.runServer();
  });

program
  .command('test')
  .description('run the test suite')
  .action(function() {
    grunt.task.run(['stagecopy', 'karma:watch']);
    console.log('   \033[36mderiving tests\033[0m');
    grunt.task.start();
  });

program
  .command('build')
  .description('create a production version of the app')
  .action(function() {
    grunt.task.run(['stagecopy']);
    console.log(base_path + "deps/test/**/*");
    console.log('   \033[36mformulating a build\033[0m');
    grunt.task.start();
  });

program
  .version(version)
  .option('-f, --force', 'force on non-empty directory')
  .option('-p, --port', 'specify which port to run the server on')
  .parse(process.argv);








